name: SendDataUpdatedEmail

on:
  workflow_run:
    workflows: [TestRequests]
      
    types:
      - completed  

  workflow_dispatch:

jobs:
  scheduled-submit:
  
    # if: ${{ github.event.workflow_run.conclusion == 'success' && github.repository_owner == 'european-modelling-hubs' }}    
    runs-on: ubuntu-latest
    
    steps:


      - name: Get previous workflow run
        id: get_previous_run
        if: github.event.schedule != '00 18 * * 5'
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'test_requests.yml',
              per_page: 1,
            });
            const lastRun = response.data.workflow_runs[0];
            core.setOutput('conclusion', lastRun.conclusion || 'no_run'); 


      - name: Debug
        run: |
          echo "Previous run result: ${{ steps.get_previous_run.outputs.conclusion }}"
          
      - name: Cancel workflow if last run was not successful 
        if: ${{ steps.get_previous_run.outputs.conclusion == 'success' }}
        run: |
          echo "Previous run was successful. No need to run the workflow today."
          exit 0 # Stop workflow run


      # Install Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

         
      # Checkout the python tools repo
      # -------------------------------------------      
      - name: Checkout repository
        uses: actions/checkout@v4
        

      # Checkout the python tools repo
      # used to verify the PR changes 
      # ------------------------------------------
      - name: checkout python tools repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: 'Testing-Forecast-Actions/Testing-Tools'
          ref: 'main'
          path: tools

      - name: install deps
        run: |
          pip install PyYAML


      # Check if some submission is outside allowed folders
      - name: Extract Mailing List
        id: extract_from_metadata
        run: |
          python ./tools/code/extract_emails.py --folder_path "model-metadata"  "--exclusions" "respicast-hubEnsemble.yml respicast-quantileBaseline.yml"
        
        
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Nuovo aggiornamento nel repository!"
          body: "Ciao,\n\nAbbiamo appena aggiornato il repository. Controlla le modifiche!\n\nSaluti,\nIl team."
          # to: paolo.milano@gmail.com  # Sostituisci con la mailing list reale
          # to: ${{ secrets.EMAIL_RECIPIENTS }}
          to: ${{ steps.extract_from_metadata.outputs.email_list }}
          from: "Respicast Team <respicast@isi.it>"
          content_type: text/plain
